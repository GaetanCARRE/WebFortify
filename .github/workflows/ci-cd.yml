name: CI/CD

on:
  push:
    branches:
      - cicd

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        cd back-web-fortify
        pip install --no-cache-dir -r requirements.txt

    - name: Build and test backend
      run: |
        cd back-web-fortify
        python test.py

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install frontend dependencies
      run: |
        cd front-web-fortify/web-fortify
        npm install

    - name: Build and test frontend
      run: |
        cd front-web-fortify/web-fortify
        # Add any additional testing or build commands here
        npm run test

  deploy:
    runs-on: ubuntu-latest

    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker
      uses: docker/setup-buildx-action@v1

    - name: Build and push Docker images
      run: |
        docker build -t your-username/backend-image -f back-web-fortify/Dockerfile .
        docker build -t your-username/frontend-image -f front-web-fortify/web-fortify/Dockerfile .
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        docker push your-username/backend-image
        docker push your-username/frontend-image

    - name: Run start_services.sh on backend container
      run: |
        docker run -d --name backend-container -p 5000:5000 -p 8775:8775 your-username/backend-image
        docker exec backend-container /start_services.sh
